microservice-chart:
  namespace: "shared"
  nameOverride: ""
  fullnameOverride: ""
  image:
    repository: ghcr.io/pagopa/pagopa-platform-authorizer-config
    tag: "0.2.3-1-upd-helm-chart"
    pullPolicy: Always
  # https://github.com/Azure/azure-functions-host/blob/dev/src/WebJobs.Script.WebHost/Controllers/HostController.cs
  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  deployment:
    create: true
  serviceMonitor:
    create: true
    endpoints:
      - interval: 10s #jmx-exporter
        targetPort: 12345
        path: /metrics
  ports:
    - 8080
  service:
    type: ClusterIP
    ports:
      - 8080
      - 12345 #jmx-exporter
  ingress:
    create: true
    host: "weudev.shared.internal.dev.platform.pagopa.it"
    path: /authorizer-config/(.*)
    servicePort: 8080
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  podAnnotations: {}
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault
  securityContext:
    allowPrivilegeEscalation: false
  resources:
    requests:
      memory: "512Mi"
      cpu: "0.25"
    limits:
      memory: "512Mi"
      cpu: "0.25"
  autoscaling:
    enable: true
    minReplica: 1
    maxReplica: 1
    pollingInterval: 10 # seconds
    cooldownPeriod: 50 # seconds
    triggers:
      - type: cpu
        metadata:
          # Required
          type: Utilization # Allowed types are 'Utilization' or 'AverageValue'
          value: "75"
      - type: memory
        metadata:
          # Required
          type: Utilization # Allowed types are 'Utilization' or 'AverageValue'
          value: "70"
  fileConfig: {}
  envConfig:
    WEBSITE_SITE_NAME: 'pagopaplatformauthorizerconfig'
    ENV: 'dev'
    APP_LOGGING_LEVEL: 'DEBUG'
    DEFAULT_LOGGING_LEVEL: 'INFO'
    ENABLE_ECS_CONSOLE: "true"
    OTEL_SERVICE_NAME: "pagopa-platform-authorizer-config"
    OTEL_RESOURCE_ATTRIBUTES: "service.name=pagopaplatformauthorizerconfigotl,deployment.environment=dev"
    OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector.elastic-system.svc:4317"
    OTEL_LOGS_EXPORTER: none
    OTEL_TRACES_SAMPLER: "always_on"
    COSMOS_URI: "https://pagopa-d-weu-shared-auth-cosmos-account.documents.azure.com:443/"
    REDIS_HOST: "pagopa-d-redis.redis.cache.windows.net"
    REDIS_PORT: "6380"
    CLIENT_READ_TIMEOUT: "10000"
    CLIENT_CONNECTION_TIMEOUT: "10000"
    APICONFIG_SELFCARE_INTEGRATION_PATH: "https://api.dev.platform.pagopa.it/apiconfig-selfcare-integration/v1"
    CORS_CONFIGURATION: '{"origins": ["*"], "methods": ["*"]}'
  envFieldRef:
    APP_NAME: "metadata.labels['app.kubernetes.io/instance']"
    APP_VERSION: "metadata.labels['app.kubernetes.io/version']"
  envSecret:
    APPLICATIONINSIGHTS_CONNECTION_STRING: 'ai-d-connection-string'
    OTEL_EXPORTER_OTLP_HEADERS: 'elastic-otel-token-header'
    COSMOS_KEY: 'auth-d-cosmos-key'
    REDIS_PASSWORD: 'redis-password'
    APICONFIG_SELFCARE_INTEGRATION_SUBKEY: 'auth-d-apiconfig-selfcare-integration-subkey'
  keyvault:
    name: "pagopa-d-shared-kv"
    tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
  nodeSelector: {}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node_type
                operator: In
                values:
                  - user
  canaryDelivery:
    create: false
    ingress:
      create: false
      canary:
        type: header
        headerName: X-Canary
        headerValue: canary
        weightPercent: 0
    service:
      create: false
    deployment:
      create: false
      image:
        repository: ghcr.io/pagopa/pagopa-platform-authorizer-config
        tag: "0.2.1"
        pullPolicy: Always
      envConfig: {}
      envSecret: {}
